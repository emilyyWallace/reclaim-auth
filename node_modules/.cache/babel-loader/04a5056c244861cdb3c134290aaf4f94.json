{"ast":null,"code":"var _jsxFileName = \"/Users/emilywallace/Desktop/reclaim-auth-frontend/src/components/ReclaimDemo.js\";\nimport React, { useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ReclaimProofRequest } from \"@reclaimprotocol/js-sdk\";\nfunction ReclaimDemo() {\n  const [requestUrl, setRequestUrl] = useState(\"\");\n  const [verificationIdentifier, setVerificationIdentifier] = useState(null);\n  const [error, setError] = useState(null);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const navigate = useNavigate(); // Navigation hook\n\n  const getVerificationReq = async () => {\n    try {\n      setIsVerifying(true);\n      setError(null);\n      const APP_ID = \"your_actual_app_id_here\";\n      const APP_SECRET = \"your_actual_secret_here\";\n      const PROVIDER_ID = \"your_actual_provider_id_here\";\n      const reclaimProofRequest = await ReclaimProofRequest.init(APP_ID, APP_SECRET, PROVIDER_ID);\n      const url = await reclaimProofRequest.getRequestUrl();\n      console.log(\"Request URL:\", url);\n      setRequestUrl(url);\n      await reclaimProofRequest.startSession({\n        onSuccess: proofs => {\n          var _proofs$;\n          console.log(\"Verification success:\", proofs);\n          setVerificationIdentifier((_proofs$ = proofs[0]) === null || _proofs$ === void 0 ? void 0 : _proofs$.verificationIdentifier);\n          setIsVerifying(false);\n        },\n        onError: error => {\n          console.error(\"Verification failed:\", error);\n          setError(\"Verification failed. Please try again.\");\n          setIsVerifying(false);\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating verification request:\", error);\n      setError(`An error occurred: ${error.message}`);\n      setIsVerifying(false);\n    }\n  };\n  const verifyWithServer = async () => {\n    if (!verificationIdentifier) {\n      setError(\"No verification identifier available\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/verify-proof\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          verificationIdentifier\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert(\"Verification Successful! Redirecting...\");\n        navigate(\"/home\"); // Redirect to Home Page\n      } else {\n        setError(\"Server verification failed\");\n      }\n    } catch (error) {\n      console.error(\"Server error:\", error);\n      setError(\"Failed to verify with the server\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Zero-Knowledge Proof Demo\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getVerificationReq,\n    disabled: isVerifying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, isVerifying ? \"Verifying...\" : \"Get Verification Request\"), requestUrl && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"20px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Scan to Verify:\"), /*#__PURE__*/React.createElement(QRCode, {\n    value: requestUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Or click \", /*#__PURE__*/React.createElement(\"a\", {\n    href: requestUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }, \"here\"), \" to verify.\")), verificationIdentifier && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"\\u2705 Verification Successful!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Verification ID: \", verificationIdentifier), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: verifyWithServer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Verify with Server\")), error && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, error));\n}\nexport default ReclaimDemo;","map":{"version":3,"names":["React","useState","QRCode","useNavigate","ReclaimProofRequest","ReclaimDemo","requestUrl","setRequestUrl","verificationIdentifier","setVerificationIdentifier","error","setError","isVerifying","setIsVerifying","navigate","getVerificationReq","APP_ID","APP_SECRET","PROVIDER_ID","reclaimProofRequest","init","url","getRequestUrl","console","log","startSession","onSuccess","proofs","_proofs$","onError","message","verifyWithServer","response","fetch","method","headers","body","JSON","stringify","result","json","success","alert","createElement","style","textAlign","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","margin","value","href","color"],"sources":["/Users/emilywallace/Desktop/reclaim-auth-frontend/src/components/ReclaimDemo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ReclaimProofRequest } from \"@reclaimprotocol/js-sdk\";\n\nfunction ReclaimDemo() {\n  const [requestUrl, setRequestUrl] = useState(\"\");\n  const [verificationIdentifier, setVerificationIdentifier] = useState(null);\n  const [error, setError] = useState(null);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const navigate = useNavigate(); // Navigation hook\n\n  const getVerificationReq = async () => {\n    try {\n      setIsVerifying(true);\n      setError(null);\n\n      const APP_ID = \"your_actual_app_id_here\";\n      const APP_SECRET = \"your_actual_secret_here\";\n      const PROVIDER_ID = \"your_actual_provider_id_here\";\n\n      const reclaimProofRequest = await ReclaimProofRequest.init(\n        APP_ID,\n        APP_SECRET,\n        PROVIDER_ID\n      );\n\n      const url = await reclaimProofRequest.getRequestUrl();\n      console.log(\"Request URL:\", url);\n      setRequestUrl(url);\n\n      await reclaimProofRequest.startSession({\n        onSuccess: (proofs) => {\n          console.log(\"Verification success:\", proofs);\n          setVerificationIdentifier(proofs[0]?.verificationIdentifier);\n          setIsVerifying(false);\n        },\n        onError: (error) => {\n          console.error(\"Verification failed:\", error);\n          setError(\"Verification failed. Please try again.\");\n          setIsVerifying(false);\n        },\n      });\n    } catch (error) {\n      console.error(\"Error creating verification request:\", error);\n      setError(`An error occurred: ${error.message}`);\n      setIsVerifying(false);\n    }\n  };\n\n  const verifyWithServer = async () => {\n    if (!verificationIdentifier) {\n      setError(\"No verification identifier available\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:3001/verify-proof\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ verificationIdentifier }),\n      });\n\n      const result = await response.json();\n      if (result.success) {\n        alert(\"Verification Successful! Redirecting...\");\n        navigate(\"/home\"); // Redirect to Home Page\n      } else {\n        setError(\"Server verification failed\");\n      }\n    } catch (error) {\n      console.error(\"Server error:\", error);\n      setError(\"Failed to verify with the server\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n      <h1>Zero-Knowledge Proof Demo</h1>\n\n      <button onClick={getVerificationReq} disabled={isVerifying}>\n        {isVerifying ? \"Verifying...\" : \"Get Verification Request\"}\n      </button>\n\n      {requestUrl && (\n        <div style={{ margin: \"20px 0\" }}>\n          <h3>Scan to Verify:</h3>\n          <QRCode value={requestUrl} />\n          <p>\n            Or click <a href={requestUrl}>here</a> to verify.\n          </p>\n        </div>\n      )}\n\n      {verificationIdentifier && (\n        <div>\n          <h2>âœ… Verification Successful!</h2>\n          <p>Verification ID: {verificationIdentifier}</p>\n          <button onClick={verifyWithServer}>Verify with Server</button>\n        </div>\n      )}\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default ReclaimDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}